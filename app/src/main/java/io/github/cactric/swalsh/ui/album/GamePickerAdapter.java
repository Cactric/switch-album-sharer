package io.github.cactric.swalsh.ui.album;

import android.content.Intent;
import android.util.ArraySet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AlertDialog;
import androidx.recyclerview.widget.RecyclerView;

import java.util.ArrayList;

import io.github.cactric.swalsh.games.Game;
import io.github.cactric.swalsh.R;
import io.github.cactric.swalsh.games.GameDatabase;

public class GamePickerAdapter extends RecyclerView.Adapter<GamePickerAdapter.ViewHolder> {
    private final ArraySet<Game> games;

    public GamePickerAdapter(ArraySet<Game> games) {
        this.games = games;
    }

    @NonNull
    @Override
    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.recycler_games, parent, false);
        return new ViewHolder(v);
    }

    @Override
    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
        Game game = games.valueAt(position);
        holder.getGameName().setText(game.gameName);

        holder.getGameRoot().setOnClickListener(v -> {
            Intent intent = new Intent(v.getContext(), AlbumActivity.class);
            intent.putExtra("EXTRA_GAME_ID", game.gameId);
            v.getContext().startActivity(intent);
        });

        holder.getEditGameName().setOnClickListener(v -> {
            // Show a popup asking the user for the name
            AlertDialog.Builder builder = new AlertDialog.Builder(v.getContext());
            // First make the view for the EditText view in the dialog
            LayoutInflater inflater = LayoutInflater.from(v.getContext());
            View dialogView = inflater.inflate(R.layout.dialog_edit_game_name, null);
            EditText nameTextField = dialogView.findViewById(R.id.game_name_entry);

            // Set the text to the old game name, if present
            // Presence is detected by whether the primary key has been changed from 0
            // (it is autogenerated on insertion into the database)
            if (game.game_primary_key != 0)
                nameTextField.setText(game.gameName);
            builder.setView(dialogView);
            builder.setTitle(R.string.edit_game_name_dialog_title);
            builder.setPositiveButton("Save", (dialog, which) -> {
                // Save the name
                String name = nameTextField.getText().toString();

                GameDatabase db = GameDatabase.getDatabase(v.getContext());
                // Modify the gameName in the game object, then add it to the db to update it
                game.gameName = name;
                db.gameDao().addGame(game);
                GamePickerAdapter.this.notifyItemChanged(position);
            });
            builder.setNegativeButton(android.R.string.cancel, (dialog, which) -> dialog.dismiss());
            builder.show();
        });
    }

    @Override
    public int getItemCount() {
        return games.size();
    }

    public static class ViewHolder extends RecyclerView.ViewHolder {
        private final LinearLayout gameRoot;
        private final TextView gameName;
        private final ImageButton editGameName;

        public ViewHolder(View v) {
            super(v);
            gameRoot = v.findViewById(R.id.game_recycler_root);
            gameName = v.findViewById(R.id.game_recycler_name);
            editGameName = v.findViewById(R.id.game_recycler_edit_name);
        }

        public LinearLayout getGameRoot() {
            return gameRoot;
        }

        public TextView getGameName() {
            return gameName;
        }

        public ImageButton getEditGameName() {
            return editGameName;
        }
    }
}
